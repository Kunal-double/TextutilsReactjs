{"version":3,"sources":["components/Alert.js","components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","NavBar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","showAlert","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","key","Date","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2f1ae359.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" href=\"#\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\"> */}\r\n          {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n          {/* <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n          {/* </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About '\r\n};","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked: \"+ text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\", \"success\")\r\n  }\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked: \"+ text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to lowercase!\", \"success\")\r\n  }\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked: \"+ text);\r\n    let newText = \" \";\r\n    setText(newText)\r\n    props.showAlert(\"Text Cleared!\", \"success\")\r\n\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n\r\n  }\r\n  const handleCopy = () => {\r\n    // console.log(\"I am copy\");\r\n    // var text = document.getElementById(\"myBox\");\r\n    //text.select();\r\n    //navigator.clipboard.writeText(text.value);\r\n    // document.getSelection().removeAllRanges();\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\")\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces has been removed!\", \"success\")\r\n  }\r\n\r\n\r\n  const [text, setText] = useState(' ');\r\n  //text=\"new text\"; // Wrong way to change the state\r\n  //setText(\"new text\"); // Correct way to change the state\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className='container my-3' style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n        <h2>Your text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title=\"Textutils-Dark Mode\";\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title=\"Textutils-Light Mode\";\n    }\n  }\n  return (\n    <>\n      {/* <NavBar title=\"Textutils\" aboutText=\"About Textutils\" />  */}\n      {/*<NavBar/> */}\n      {/* <Router> */}\n      {/* <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> */}\n      <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* /users ---> Component 1\n    /users/home ---> Component 2 */}\n        {/* <Route exact path=\"/about\"\n              element={<About mode={mode} />} >\n            </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          showAlert={showAlert} heading=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode} />\n\n        {/* </Route> */}\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}