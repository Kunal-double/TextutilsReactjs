{"version":3,"sources":["components/Alert.js","components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","NavBar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.31e8fe6d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n           <Link className=\"nav-link\" to=\"/about\">{props.aboutText }</Link>\r\n          \r\n         </li> */} \r\n        </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\"> */}\r\n        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n        {/* <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n      {/* </form> */}\r\n       <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n       <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavBar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About '\r\n};","import React, {useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n       // console.log(\"Uppercase was clicked: \"+ text);\r\n       let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\")\r\n    }\r\n      const handleLoClick=()=>{\r\n         // console.log(\"Uppercase was clicked: \"+ text);\r\n         let newText = text.toLowerCase();\r\n          setText(newText)\r\n          props.showAlert(\"Converted to lowercase!\", \"success\")\r\n      }\r\n      const handleClearClick=()=>{\r\n        // console.log(\"Uppercase was clicked: \"+ text);\r\n        let newText = \" \";\r\n         setText(newText)\r\n         props.showAlert(\"Text Cleared!\", \"success\")\r\n\r\n     }\r\n    const handleOnChange =(event)=>{\r\n       // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n      \r\n    }\r\n    const handleCopy=()=>{\r\n      var text=document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to Clipboard!\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra spaces has been removed!\", \"success\")\r\n        }\r\n\r\nconst [text, setText] = useState(' ');\r\n//text=\"new text\"; // Wrong way to change the state\r\n//setText(\"new text\"); // Correct way to change the state\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange ={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n </div>\r\n    <div className ='container my-3' style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n    <h2>Your text Summary</h2>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").length } Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter Something in the textbox a to Preview here!! \"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode]=useState('light'); //Whether dark mode is enabled or not\n const [alert,setAlert]=useState(null)\n\n const showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout(()=>{\n    setAlert(null);\n  },1500);\n  }\n\n  const toggleMode= ()=>{\n    if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark mode has been enabled\", \"success\")\n    document.title=\"Textutils-Dark Mode\";\n  }\n  else {\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enabled\", \"success\")\n    document.title=\"Textutils-Light Mode\";\n  }\n}\n  return (\n   <>\n{/* <NavBar title=\"Textutils\" aboutText=\"About Textutils\" />  */}\n  {/* <NavBar/>  */}\n  {/* <Router> */}\n  <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> \n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Routes>\n    {/* /users ---> Component 1\n    /users/home ---> Component 2 */}\n          {/* <Route exact path=\"/about\"\n           element={<About />} >\n          </Route> */} \n          {/* <Route exact path=\"/\" */}\n          <TextForm  showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n\n          {/* </Route>\n        </Routes> */}\n  </div>\n  {/* </Router> */}\n  \n   </>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}